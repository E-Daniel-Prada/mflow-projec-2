version: '3.8'

services:
  jupyterlab:
    build: .
    container_name: jupyterlab
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
    depends_on:
      - postgres
      - mlflow

  project-postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    container_name: project-postgres
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Base de datos para almacenar y limpiar datos
  mysql:
    image: mysql:latest
    container_name: mysql_data
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: data_db
      MYSQL_USER: data_user
      MYSQL_PASSWORD: data_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./initdb:/docker-entrypoint-initdb.d 

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mlops_db
    ports:
      - "5433:5432"

  apache-airflow:
    container_name: apache-airflow
    image: python:3.8-slim-buster
    tty: true
    ports:
      - "8082:8080"
    volumes:
        - ./dags:/app/airflow/dags
        - ./data:/usr/local/airflow/data
        - ./requirements.txt:/requirements.txt
    command:
          - /bin/sh
          - -c
          - |
              mkdir -p /app/airflow
              touch /app/airflow/app.log
              pip install --upgrade pip
              apt update -y; apt install procps net-tools iputils-ping traceroute -y
              apt-get update && apt-get install -y postgresql-client
              pip install -r /requirements.txt
              echo 'Instalacion de Airflow Ok!'
              airflow standalone >> /app/airflow/app.log 2>&1 &
              sleep 20; airflow connections delete postgres_default
              airflow connections add postgres_default --conn-type postgres --conn-login airflow --conn-password airflow --conn-host project-postgres --conn-port 5432 --conn-schema airflow
              airflow users create --role Admin --username airflow --email airflow@airflow --firstname airflow --lastname airflow --password superTest
              sh
    environment:
        AIRFLOW_HOME: /app/airflow
        AIRFLOW__CORE__FERNET_KEY: ''
        AIRFLOW__WEBSERVER__AUTHENTICATE: 'false'
        AIRFLOW__WEBSERVER__RBAC: 'false'
        AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
        AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - project-postgres


  mlflow:
    image: ghcr.io/mlflow/mlflow
    container_name: mlflow
    ports:
      - "5000:5000"
    environment:
      BACKEND_STORE_URI: postgresql://user:password@postgres/mlops_db
    command: >
      /bin/sh -c "pip install psycopg2-binary &&
      mlflow server --backend-store-uri postgresql://user:password@postgres/mlops_db --default-artifact-root /mlflow --host 0.0.0.0"
    depends_on:
      - postgres

volumes:
  postgres_data:
  mysql_data: